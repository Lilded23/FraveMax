/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package VistasProducto;

import Conexion.ProductoData;
import Entidades.Producto;
import Vistas.FloatingWindow;
import Vistas.Principal;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import java.lang.NumberFormatException;

/**
 *
 * @author Albornoz
 */
public class Modificar extends javax.swing.JPanel {

    /**
     * Creates new form Modificar
     */
    FloatingWindow parentWindow;
    boolean ejecutarAccion = true;

    public Modificar(FloatingWindow parentWindow) {
        this.parentWindow = parentWindow;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jtfNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfPrecioActual = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jbNuevo = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        JTDescripcion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        JStock = new javax.swing.JSpinner();

        jLabel2.setText("NOMBRE:");

        jLabel3.setText("DESCRIPCIÃ“N:");

        jLabel4.setText("PRECIO ACTUAL: ");

        jtfPrecioActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPrecioActualActionPerformed(evt);
            }
        });

        jLabel5.setText("STOCK:");

        jbNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-guardar-30.png"))); // NOI18N
        jbNuevo.setText("Guardar");
        jbNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbNuevoMouseClicked(evt);
            }
        });
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-cancelar-30.png"))); // NOI18N
        jButton1.setText("Cancelar");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel6.setText("ESTADO");

        jCheckBox1.setText("Activo");

        JStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JStockKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JStockKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(JTDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                            .addComponent(jtfNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jtfPrecioActual, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(149, 149, 149))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbNuevo)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jtfPrecioActual))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JStock, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(JTDescripcion))
                .addGap(29, 29, 29)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addGap(21, 136, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNuevo)
                    .addComponent(jButton1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        parentWindow.dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    private void JStockKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JStockKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_JStockKeyReleased

    private void JStockKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JStockKeyPressed
        // TODO add your handling code here:
        try {
            var e = String.valueOf(evt.getKeyChar());

            System.out.println(e);

            int verificar = Integer.parseInt(e);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Esta ingresando un valor no valido");
        }
    }//GEN-LAST:event_JStockKeyPressed

    private void jbNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbNuevoMouseClicked
        // TODO add your handling code here:   
        if (ejecutarAccion) {
            try {
                String nombre = jtfNombre.getText();
                String des = JTDescripcion.getText();
                int stock = (Integer) JStock.getValue();
                double precio = Double.parseDouble(jtfPrecioActual.getText());
                boolean estado = jCheckBox1.isSelected();

                if (!nombre.matches("^[A-Za-z0-9\"'.,\\s]*$")) {
                    throw new RuntimeException("Error al ingresar el producto");
                }

                if (des.isEmpty()) {
                    throw new RuntimeException("La casilla de descripcion no puede estar vacio ");
                }

                if (stock < 0) {
                    throw new RuntimeException("Stock tiene mayor 0 ");
                }

                Producto prod = new Producto(nombre, des, precio, stock, estado);

                ProductoData.IngresarNuevoProducto(prod);

                JOptionPane.showMessageDialog(null, "Nuevo producto agregado EXITOSAMENTE");
                Principal.mostrarListaProductos();
                parentWindow.dispose();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            } catch (RuntimeException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
                // e.printStackTrace();
            }
        }

    }//GEN-LAST:event_jbNuevoMouseClicked

    private void jtfPrecioActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPrecioActualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPrecioActualActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner JStock;
    private javax.swing.JTextField JTDescripcion;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JTextField jtfNombre;
    private javax.swing.JTextField jtfPrecioActual;
    // End of variables declaration//GEN-END:variables

    public void ModificarProducto(Producto producto) {
        jtfNombre.setText(producto.getNombreProducto());
        JTDescripcion.setText(producto.getDescripcion());
        jtfPrecioActual.setText(Double.toString(producto.getPrecioActual()));
        JStock.setValue(producto.getStock());
        jCheckBox1.setSelected(producto.isEstado());

        jbNuevo.setText("Modificar");

        ejecutarAccion = false;
        if (!ejecutarAccion) {

            try {
                jbNuevo.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        try {
                            String nombre = jtfNombre.getText();
                            String des = JTDescripcion.getText();
                            int stock = (Integer) JStock.getValue();

                            if (!nombre.matches("^[A-Za-z0-9\"'.,\\s]*$")) {
                                throw new RuntimeException("Error al ingresar el producto");
                            }

                            if (des.isEmpty()) {
                                throw new RuntimeException("La casilla de descripciÃ³n no puede estar vacÃ­a");
                            }

                            if (stock < 0) {
                                throw new RuntimeException("El stock debe ser mayor o igual a 0");
                            }
                            double precioActual = Double.parseDouble(jtfPrecioActual.getText());
                            if (precioActual < 1) {
                                throw new RuntimeException("El precio debe ser mayor o 1");
                            }
                            producto.setNombreProducto(jtfNombre.getText());
                            producto.setDescripcion(JTDescripcion.getText());
                            producto.setPrecioActual(precioActual);
                            producto.setStock((int) JStock.getValue());
                            producto.setEstado(jCheckBox1.isSelected());

                            System.out.println(JStock.getValue());

                            boolean modificar = ProductoData.ActualizarProducto(producto, producto.getIdProducto());

                            if (modificar) {
                                System.out.println("Se ejecutÃ³ la modificaciÃ³n");
                                Principal.mostrarListaProductos();
                                JOptionPane.showMessageDialog(null, "Se guardÃ³ con Ã©xito el Producto" + producto.toString());
                                parentWindow.dispose();
                            } else {
                                Principal.mostrarListaProductos();
                                JOptionPane.showMessageDialog(null, "Se produjo un error al guardar");
                            }
                        } catch (RuntimeException ex) {
                            JOptionPane.showMessageDialog(null, ex.getMessage());
                        }
                        ejecutarAccion = false;
                    }
                });
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }

}
