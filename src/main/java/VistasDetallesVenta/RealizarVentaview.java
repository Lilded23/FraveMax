/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package VistasDetallesVenta;

import Entidades.*;
import Conexion.*;
import Vistas.Principal;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cisco
 */
public final class RealizarVentaview extends javax.swing.JPanel {

    List<Producto> listaProd = new ArrayList();
    List<Cliente> clientes = ClienteData.listaCliente();
    List<Integer> listaidVenta = new ArrayList();
    private double total = 0;

    private DefaultTableModel modeloProd = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };

    private DefaultTableModel modeloDetalle = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };

    public class ComboClientes extends DefaultComboBoxModel<Cliente> {

        public ComboClientes() {
            super();
        }
    }

    /**
     * Creates new form Ventas
     */
    public RealizarVentaview() {
        initComponents();
        initComboCllientes();
        agregarCabeceraProd();
        cargarListaProd();
        agregarCabeceraDetalles();
        jsCantidad.setValue(1);
    }

    private void agregarCabeceraProd() {
        modeloProd.addColumn("ID");
        modeloProd.addColumn("Nombre");
        modeloProd.addColumn("Descripcion");
        modeloProd.addColumn("Precio");
        tablaProd.setModel(modeloProd);
    }

    private void borrarfilasProd() {
        int f = tablaProd.getRowCount() - 1;

        for (int i = f; i >= 0; i--) {
            modeloProd.removeRow(i);
        }
    }

    private void agregarCabeceraDetalles() {
        modeloDetalle.addColumn("ID");
        modeloDetalle.addColumn("Producto");
        modeloDetalle.addColumn("Descripcion");
        modeloDetalle.addColumn("Cantidad");
        modeloDetalle.addColumn("Precio");
        jtTablaDetalles.setModel(modeloDetalle);
    }

    public void initComboCllientes() {
        ComboClientes clienteCombo = new ComboClientes();
        for (Cliente cli : clientes) {
            clienteCombo.addElement(cli);
        }
        clientesCB.setModel(clienteCombo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        venta = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProd = new javax.swing.JTable();
        clientesCB = new javax.swing.JComboBox<Cliente>();
        jtNombreProd = new javax.swing.JTextField();
        jbFin = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jbAgregar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jsCantidad = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtTablaDetalles = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jbEliminar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jbBuscarDni = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jtTotal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0));

        addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                formAncestorResized(evt);
            }
        });

        tablaProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Descripcion", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProd.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(tablaProd);

        clientesCB.setModel(new javax.swing.DefaultComboBoxModel<Cliente>());
        clientesCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientesCBActionPerformed(evt);
            }
        });

        jtNombreProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNombreProdActionPerformed(evt);
            }
        });
        jtNombreProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtNombreProdKeyReleased(evt);
            }
        });

        jbFin.setText("Finalizar compra");
        jbFin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFinActionPerformed(evt);
            }
        });

        jLabel4.setText("Seleccione un cliente");

        jbAgregar.setText("Agregar");
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });

        jLabel6.setText("Cantidad:");

        jsCantidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsCantidadStateChanged(evt);
            }
        });

        jtTablaDetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtTablaDetalles);

        jLabel7.setText("Lista de productos");

        jLabel8.setText("Detalles de la compra");

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jLabel2.setText("Buscar DNI:");

        jbBuscarDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarDniActionPerformed(evt);
            }
        });

        jLabel3.setText("TOTAL:");

        jLabel1.setText("Nombre del Producto:");
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout ventaLayout = new javax.swing.GroupLayout(venta);
        venta.setLayout(ventaLayout);
        ventaLayout.setHorizontalGroup(
            ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ventaLayout.createSequentialGroup()
                        .addGroup(ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ventaLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jsCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbAgregar)
                                .addGap(5, 5, 5))
                            .addGroup(ventaLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(6, 6, 6))
                            .addGroup(ventaLayout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ventaLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ventaLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jbEliminar)
                                .addGap(69, 69, 69)
                                .addGroup(ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(ventaLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtTotal))
                                    .addComponent(jbFin)))))
                    .addGroup(ventaLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtNombreProd, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ventaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(111, 111, 111))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ventaLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(clientesCB, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbBuscarDni, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        ventaLayout.setVerticalGroup(
            ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jbBuscarDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientesCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtNombreProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ventaLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE))
                .addGroup(ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(ventaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbAgregar)
                            .addComponent(jLabel6)
                            .addComponent(jsCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(ventaLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbFin)
                            .addComponent(jbEliminar))))
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(venta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(venta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtNombreProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNombreProdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNombreProdActionPerformed

    private void clientesCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientesCBActionPerformed

    }//GEN-LAST:event_clientesCBActionPerformed

    private void formAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formAncestorResized
        // TODO add your handling code here:
    }//GEN-LAST:event_formAncestorResized

    private void jbFinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFinActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(null,
                "Confirmacion de la venta",
                "Confirmación", JOptionPane.OK_CANCEL_OPTION);
        if (respuesta == JOptionPane.OK_OPTION) {
            Cliente cliente = (Cliente) clientesCB.getSelectedItem();
            int idCliente = cliente.getIdCliente();
            if (idCliente > 0) {
                cliente = ClienteData.BuscarCliente(idCliente);
                Principal.mostrarDetalle(cliente, listaidVenta, total);

            } else {
                JOptionPane.showMessageDialog(this, "Debe seleccionar un cliente",
                        "Error en Cliente", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jbFinActionPerformed

    private void jbBuscarDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarDniActionPerformed
        String dniBuscado = jbBuscarDni.getText();

        for (int i = 0; i < clientesCB.getItemCount(); i++) {
            String dniComboBox = String.valueOf(clientesCB.getItemAt(i).getDni());
            if (dniComboBox.contains(dniBuscado)) {
                clientesCB.setSelectedIndex(i);
                return;
            }
        }
        clientesCB.setSelectedIndex(-1);
    }//GEN-LAST:event_jbBuscarDniActionPerformed

    private void jtNombreProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNombreProdKeyReleased
        borrarfilasProd();
        String nombreBuscado = jtNombreProd.getText().toLowerCase();
        if (!nombreBuscado.isEmpty()) {
            for (Producto prod : listaProd) {
                if (prod.getNombreProducto().toLowerCase().contains(nombreBuscado)) {
                    modeloProd.addRow(new Object[]{
                        prod.getIdProducto(),
                        prod.getNombreProducto(),
                        prod.getDescripcion(),
                        prod.getPrecioActual(),});
                }
            }
        } else {
            cargarListaProd();
        }


    }//GEN-LAST:event_jtNombreProdKeyReleased

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed
        LocalDate fecha;
        fecha = LocalDate.now();
        int cantidad = (int) jsCantidad.getValue();
        Cliente cliente = (Cliente) clientesCB.getSelectedItem();
        Venta nuevaVenta = new Venta(cliente, fecha);
        VentaData.guardarVenta(nuevaVenta);
        Producto productoSeleccionado = buscaProd();
        if (productoSeleccionado != null && validarCantidad()) {
            detalleVenta dv = new detalleVenta(cantidad, nuevaVenta, productoSeleccionado.getPrecioActual(), productoSeleccionado);
            DetalleVentaData.registrarDetalleVenta(dv);
            listaidVenta.add(nuevaVenta.getIdVenta());
            total = (total + dv.getCantidad() * productoSeleccionado.getPrecioActual());
            modeloDetalle.addRow(new Object[]{
                nuevaVenta.getIdVenta(),
                dv.getProducto().getNombreProducto(),
                dv.getProducto().getDescripcion(),
                dv.getCantidad(),
                dv.getCantidad() * productoSeleccionado.getPrecioActual(),});
            jtTotal.setText(String.valueOf(total));
            cargarListaProd();
            jtNombreProd.setText("");
        }
    }//GEN-LAST:event_jbAgregarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        int fila = jtTablaDetalles.getSelectedRow();
        int idVenta = (int) jtTablaDetalles.getValueAt(fila, 0);
        double precio = (double) jtTablaDetalles.getValueAt(fila, 4);
        DetalleVentaData.eliminarDetalleVenta(idVenta);
        VentaData.eliminarVenta(idVenta);
        modeloDetalle.removeRow(fila);
        total = total - precio;
        jtTotal.setText(String.valueOf(total));
        Iterator<Integer> iterator = listaidVenta.iterator();
        while (iterator.hasNext()) {
            Integer id = iterator.next();
            if (id == idVenta) {
                iterator.remove();
            }
        }
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jsCantidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsCantidadStateChanged
    }//GEN-LAST:event_jsCantidadStateChanged

    private void listaProductos() {
        if (listaProd.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No hay Productos en el sistema");
        } else {
            listaProd.forEach(producto -> {
                modeloProd.addRow(new Object[]{
                    producto.getIdProducto(),
                    producto.getNombreProducto(),
                    producto.getDescripcion(),
                    producto.getPrecioActual(),});
            });
        }
    }

    private boolean validarCantidad() {
        int valor = (int) jsCantidad.getValue();
        if (valor > 0) {
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Cantidad no puede ser 0 (CERO)",
                    "Error en Cantidad de producto", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }

    private Producto buscaProd() {
        int fila = tablaProd.getSelectedRow();
        if (fila >= 0) {
            int idProd = (int) tablaProd.getValueAt(fila, 0);
            for (Producto producto : listaProd) {
                if (producto.getIdProducto() == idProd) {
                    return producto;
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un producto",
                    "Error en producto", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        return null;
    }

    private void cargarListaProd() {
        listaProd = ProductoData.listaProducto();
        borrarfilasProd();
        listaProductos();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Cliente> clientesCB;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JTextField jbBuscarDni;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbFin;
    private javax.swing.JSpinner jsCantidad;
    private javax.swing.JTextField jtNombreProd;
    private javax.swing.JTable jtTablaDetalles;
    private javax.swing.JTextField jtTotal;
    private javax.swing.JTable tablaProd;
    private javax.swing.JPanel venta;
    // End of variables declaration//GEN-END:variables
}
